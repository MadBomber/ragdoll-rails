<!DOCTYPE html>
<html>
  <head>
    <title><%= content_for(:title) || "Ragdoll Dashboard" %></title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>
    <meta name="csrf-token" content="<%= form_authenticity_token %>">

    <%= yield :head %>

    <%= favicon_link_tag "ragdoll.png", type: "image/png" %>
    <%= favicon_link_tag "ragdoll.png", rel: "apple-touch-icon" %>
    <%= stylesheet_link_tag "application", "data-turbo-track": "reload" %>
    
    <!-- Bootstrap CSS from CDN -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    
    <!-- Rails UJS for handling method: :delete and data-confirm -->
    <script src="https://cdn.jsdelivr.net/npm/@rails/ujs@7.0.0/lib/assets/compiled/rails-ujs.js"></script>
    
    <!-- ActionCable from CDN with fallback handling -->
    <script src="https://cdn.jsdelivr.net/gh/rails/rails@7-1-stable/actioncable/app/assets/javascripts/action_cable.js"></script>
    
    <!-- Fallback CSS for when CDN is blocked -->
    <style>
      .container { max-width: 1200px; margin: 0 auto; padding: 0 15px; }
      .row { display: flex; flex-wrap: wrap; margin: 0 -15px; }
      .col-md-8 { flex: 0 0 66.666667%; max-width: 66.666667%; padding: 0 15px; }
      .col-md-4 { flex: 0 0 33.333333%; max-width: 33.333333%; padding: 0 15px; }
      .col-12 { flex: 0 0 100%; max-width: 100%; padding: 0 15px; }
      .card { border: 1px solid #dee2e6; border-radius: 0.375rem; margin-bottom: 1rem; }
      .card-header { padding: 0.75rem 1.25rem; background-color: #f8f9fa; border-bottom: 1px solid #dee2e6; }
      .card-body { padding: 1.25rem; }
      .btn { display: inline-block; padding: 0.375rem 0.75rem; font-size: 1rem; line-height: 1.5; border-radius: 0.375rem; border: 1px solid; text-decoration: none; cursor: pointer; }
      .btn-primary { color: #fff; background-color: #007bff; border-color: #007bff; }
      .navbar { padding: 0.5rem 0; background-color: #007bff !important; }
      .navbar-brand { color: #fff !important; text-decoration: none; font-weight: bold; }
      .nav-link { color: #fff !important; text-decoration: none; padding: 0.5rem 1rem; }
      .alert { padding: 0.75rem 1.25rem; margin-bottom: 1rem; border: 1px solid; border-radius: 0.375rem; }
      .alert-success { color: #155724; background-color: #d4edda; border-color: #c3e6cb; }
      .alert-danger { color: #721c24; background-color: #f8d7da; border-color: #f5c6cb; }
      .alert-info { color: #0c5460; background-color: #d1ecf1; border-color: #bee5eb; }
    </style>
  </head>

  <body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
      <div class="container">
        <%= link_to "Ragdoll Dashboard", ragdoll.root_path, class: "navbar-brand" %>
        
        <div class="navbar-nav ms-auto">
          <%= link_to "Dashboard", ragdoll.dashboard_index_path, class: "nav-link" %>
          <%= link_to "Documents", ragdoll.documents_path, class: "nav-link" %>
          <%= link_to "Jobs", ragdoll.jobs_path, class: "nav-link" %>
          <%= link_to "Search", ragdoll.search_index_path, class: "nav-link" %>
          <%= link_to "Analytics", ragdoll.analytics_path, class: "nav-link" %>
          <%= link_to "Back to Demo", main_app.root_path, class: "nav-link" %>
        </div>
      </div>
    </nav>

    <% if flash.any? %>
      <div class="container mt-3">
        <% flash.each do |type, message| %>
          <div class="alert alert-<%= type == 'notice' ? 'success' : type == 'alert' ? 'danger' : 'info' %> alert-dismissible fade show" role="alert">
            <%= message %>
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
          </div>
        <% end %>
      </div>
    <% end %>

    <main>
      <%= yield %>
    </main>

    <!-- JavaScript with fallback support -->
    <script>
      // Check if CDN resources loaded, provide fallbacks if not
      console.log('üîß Checking JavaScript dependencies...');
      
      // ActionCable fallback and App global setup
      window.App = window.App || {};
      
      if (typeof ActionCable === 'undefined') {
        console.warn('ActionCable not loaded from CDN, using minimal fallback');
        window.ActionCable = {
          createConsumer: function(url) {
            console.log('ActionCable fallback: WebSocket functionality disabled');
            return {
              subscriptions: {
                create: function(channel, callbacks) {
                  console.log('ActionCable fallback: Channel subscription disabled', channel);
                  if (callbacks && callbacks.connected) {
                    setTimeout(() => callbacks.connected(), 100);
                  }
                  return {
                    unsubscribe: function() { console.log('ActionCable fallback: Unsubscribe'); }
                  };
                }
              },
              disconnect: function() { console.log('ActionCable fallback: Disconnect'); }
            };
          }
        };
      } else {
        console.log('‚úÖ ActionCable loaded from CDN');
      }
      
      // Ensure App.cable is available regardless of loading method
      if (!window.App) {
        window.App = {};
      }
      
      if (typeof ActionCable !== 'undefined' && !window.App.cable) {
        try {
          window.App.cable = ActionCable.createConsumer('/cable');
          console.log('‚úÖ App.cable initialized from CDN ActionCable');
          console.log('‚úÖ App.cable consumer ready:', window.App.cable);
        } catch (e) {
          console.error('‚ùå Failed to initialize App.cable:', e);
        }
      } else if (window.App.cable) {
        console.log('‚úÖ App.cable already initialized');
      }
      
      console.log('üöÄ JavaScript dependencies check complete');
      
      // Additional CDN loading diagnostics
      console.log('üìä CDN Resource Status:');
      console.log('- ActionCable CDN loaded:', typeof ActionCable !== 'undefined');
      console.log('- Bootstrap CDN loaded:', typeof bootstrap !== 'undefined');
      console.log('- Chart.js CDN loaded:', typeof Chart !== 'undefined');
      
      console.log('üîß Fallback system status:');
      console.log('- ActionCable fallback:', window.ActionCable ? 'active' : 'inactive');
      
      // Initialize Rails UJS
      if (typeof Rails !== 'undefined') {
        Rails.start();
        console.log('‚úÖ Rails UJS initialized');
      } else {
        console.warn('‚ö†Ô∏è Rails UJS not available');
      }
    </script>
    
    <!-- JavaScript from CDN -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <%= javascript_importmap_tags %>
    <%= javascript_include_tag 'ragdoll/application', 'data-turbo-track': 'reload' %>
    
    <%= yield :javascript %>
  </body>
</html>