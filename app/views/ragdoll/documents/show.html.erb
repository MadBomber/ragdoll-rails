<% content_for(:title, "Document: #{@document.title}") %>

<div class="container-fluid mt-4">
  <div class="row">
    <div class="col-md-8">
      <!-- Document Details -->
      <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">
          <h4 class="card-title mb-0">
            <i class="fas fa-file-alt"></i> <%= @document.title %>
          </h4>
          <span class="badge bg-<%= @document.status == 'processed' ? 'success' : @document.status == 'failed' ? 'danger' : 'warning' %> fs-6">
            <%= @document.status.humanize %>
          </span>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-6">
              <p><strong>Document Type:</strong> <%= @document.document_type %></p>
              <p><strong>Created:</strong> <%= @document.created_at.strftime("%B %d, %Y at %I:%M %p") %></p>
              <p><strong>Last Modified:</strong> <%= @document.file_modified_at&.strftime("%B %d, %Y at %I:%M %p") || "N/A" %></p>
            </div>
            <div class="col-md-6">
              <p><strong>File Size:</strong> <%= number_to_human_size(@document.metadata['file_size']) if @document.metadata && @document.metadata['file_size'] %></p>
              <p><strong>Encoding:</strong> <%= @document.metadata['encoding'] if @document.metadata && @document.metadata['encoding'] %></p>
              <p><strong>Location:</strong> <code class="text-muted small"><%= @document.location %></code></p>
            </div>
          </div>
          
          <% if @document.summary.present? %>
          <div class="mt-3">
            <h6><strong>Summary:</strong></h6>
            <p class="text-muted"><%= @document.summary %></p>
          </div>
          <% end %>
          
          <% if @document.keywords.present? %>
          <div class="mt-3">
            <h6><strong>Keywords:</strong></h6>
            <% @document.keywords.each do |keyword| %>
              <span class="badge bg-light text-dark me-1"><%= keyword %></span>
            <% end %>
          </div>
          <% end %>
        </div>
        <div class="card-footer">
          <div class="btn-group" role="group">
            <%= link_to "Edit", ragdoll.edit_document_path(@document), class: "btn btn-outline-primary" %>
            <%= link_to "Reprocess", ragdoll.reprocess_document_path(@document), method: :post, class: "btn btn-outline-warning", data: { confirm: "Are you sure you want to reprocess this document?" } %>
            <%= link_to "Download", ragdoll.download_document_path(@document), class: "btn btn-outline-info" %>
            <%= link_to "Delete", ragdoll.document_path(@document), method: :delete, class: "btn btn-outline-danger", data: { confirm: "Are you sure you want to delete '#{@document.title}'?\n\nThis action cannot be undone.", turbo_method: :delete } %>
            <%= link_to "Back to Documents", ragdoll.documents_path, class: "btn btn-secondary" %>
          </div>
        </div>
      </div>

      <!-- Embeddings -->
      <% if @embeddings && @embeddings.any? %>
      <div class="card">
        <div class="card-header">
          <h5 class="card-title mb-0">
            <i class="fas fa-vector-square"></i> Embeddings 
            <span class="badge bg-info"><%= @embeddings.count %></span>
          </h5>
        </div>
        <div class="card-body">
          <div class="table-responsive">
            <table class="table table-sm">
              <thead>
                <tr>
                  <th>ID</th>
                  <th>Content Preview</th>
                  <th>Vector Dimensions</th>
                  <th>Created</th>
                </tr>
              </thead>
              <tbody>
                <% @embeddings.limit(10).each do |embedding| %>
                <tr>
                  <td><code><%= embedding.id %></code></td>
                  <td>
                    <span class="content-preview-clickable"
                          data-full-content="<%= html_escape(embedding.content) %>"
                          data-embedding-id="<%= embedding.id %>"
                          style="cursor: pointer; color: #0d6efd; text-decoration: underline;">
                      <%= truncate(embedding.content, length: 100) %>
                    </span>
                  </td>
                  <td>
                    <span class="badge bg-secondary">
                      <%= embedding.embedding_vector&.size || "N/A" %>
                    </span>
                  </td>
                  <td>
                    <small class="text-muted">
                      <%= time_ago_in_words(embedding.created_at) %> ago
                    </small>
                  </td>
                </tr>
                <% end %>
              </tbody>
            </table>
          </div>
          <% if @embeddings.count > 10 %>
            <p class="text-muted small mt-2">
              Showing first 10 of <%= @embeddings.count %> embeddings.
            </p>
          <% end %>
        </div>
      </div>
      <% else %>
      <div class="card">
        <div class="card-body text-center text-muted">
          <i class="fas fa-info-circle fa-2x mb-3"></i>
          <p>No embeddings available for this document.</p>
          <p class="small">Embeddings will be generated when the document is processed.</p>
        </div>
      </div>
      <% end %>
    </div>

    <!-- Sidebar -->
    <div class="col-md-4">
      <!-- Document Metadata -->
      <div class="card mb-4">
        <div class="card-header">
          <h6 class="card-title mb-0">
            <i class="fas fa-info-circle"></i> Metadata
          </h6>
        </div>
        <div class="card-body">
          <% if @document.metadata.present? %>
            <% @document.metadata.each do |key, value| %>
              <div class="row mb-2">
                <div class="col-5">
                  <small class="text-muted"><%= key.humanize %>:</small>
                </div>
                <div class="col-7">
                  <small>
                    <% if value.is_a?(String) && value.length > 30 %>
                      <span title="<%= value %>"><%= truncate(value, length: 30) %></span>
                    <% else %>
                      <%= value %>
                    <% end %>
                  </small>
                </div>
              </div>
            <% end %>
          <% else %>
            <p class="text-muted small">No metadata available.</p>
          <% end %>
        </div>
      </div>

      <!-- Recent Searches -->
      <% if @recent_searches && @recent_searches.any? %>
      <div class="card">
        <div class="card-header">
          <h6 class="card-title mb-0">
            <i class="fas fa-search"></i> Recent Searches
          </h6>
        </div>
        <div class="card-body">
          <% @recent_searches.each do |search| %>
            <div class="mb-2">
              <small>
                <%= link_to search.query, ragdoll.search_index_path(query: search.query), class: "text-decoration-none" %>
                <span class="text-muted">
                  - <%= time_ago_in_words(search.created_at) %> ago
                </span>
              </small>
            </div>
          <% end %>
        </div>
      </div>
      <% end %>

      <!-- Quick Actions -->
      <div class="card mt-4">
        <div class="card-header">
          <h6 class="card-title mb-0">
            <i class="fas fa-bolt"></i> Quick Actions
          </h6>
        </div>
        <div class="card-body">
          <%= link_to "Search this Document", ragdoll.search_index_path(query: @document.title), class: "btn btn-outline-primary btn-sm w-100 mb-2" %>
          <%= link_to "View Similar Documents", ragdoll.documents_path(document_type: @document.document_type), class: "btn btn-outline-secondary btn-sm w-100 mb-2" %>
          <%= link_to "Upload New Document", ragdoll.new_document_path, class: "btn btn-outline-success btn-sm w-100" %>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Chunk Content Modal -->
<div class="modal fade" id="chunkContentModal" tabindex="-1" aria-labelledby="chunkContentModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-scrollable">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="chunkContentModalLabel">
          <i class="fas fa-file-text"></i> Chunk Content - ID: <span id="chunkId"></span>
        </h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="mb-3">
          <label class="form-label"><strong>Full Content:</strong></label>
          <div class="border rounded p-3 bg-light" style="max-height: 400px; overflow-y: auto;">
            <pre id="chunkFullContent" style="white-space: pre-wrap; font-family: inherit; margin: 0;"></pre>
          </div>
        </div>
        <div class="row">
          <div class="col-md-6">
            <small class="text-muted">
              <strong>Character Count:</strong> <span id="chunkCharCount"></span>
            </small>
          </div>
          <div class="col-md-6">
            <small class="text-muted">
              <strong>Word Count:</strong> <span id="chunkWordCount"></span>
            </small>
          </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-outline-secondary" onclick="copyToClipboard()">
          <i class="fas fa-copy"></i> Copy to Clipboard
        </button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Add click event listeners to all content previews
  document.querySelectorAll('.content-preview-clickable').forEach(function(element) {
    element.addEventListener('click', function() {
      const fullContent = this.dataset.fullContent;
      const embeddingId = this.dataset.embeddingId;

      // Update modal content
      document.getElementById('chunkId').textContent = embeddingId;
      document.getElementById('chunkFullContent').textContent = fullContent;
      document.getElementById('chunkCharCount').textContent = fullContent.length.toLocaleString();
      document.getElementById('chunkWordCount').textContent = fullContent.trim().split(/\s+/).length.toLocaleString();

      // Show the modal
      const modal = new bootstrap.Modal(document.getElementById('chunkContentModal'));
      modal.show();
    });
  });
});

function copyToClipboard() {
  const content = document.getElementById('chunkFullContent').textContent;

  if (navigator.clipboard && navigator.clipboard.writeText) {
    navigator.clipboard.writeText(content).then(function() {
      // Show success feedback
      const copyButton = event.target.closest('button');
      const originalText = copyButton.innerHTML;
      copyButton.innerHTML = '<i class="fas fa-check"></i> Copied!';
      copyButton.classList.remove('btn-outline-secondary');
      copyButton.classList.add('btn-success');

      setTimeout(function() {
        copyButton.innerHTML = originalText;
        copyButton.classList.remove('btn-success');
        copyButton.classList.add('btn-outline-secondary');
      }, 2000);
    }).catch(function(err) {
      console.error('Failed to copy: ', err);
      fallbackCopyToClipboard(content);
    });
  } else {
    fallbackCopyToClipboard(content);
  }
}

function fallbackCopyToClipboard(text) {
  const textArea = document.createElement('textarea');
  textArea.value = text;
  textArea.style.position = 'fixed';
  textArea.style.left = '-999999px';
  textArea.style.top = '-999999px';
  document.body.appendChild(textArea);
  textArea.focus();
  textArea.select();

  try {
    document.execCommand('copy');
    // Show success feedback
    const copyButton = event.target.closest('button');
    const originalText = copyButton.innerHTML;
    copyButton.innerHTML = '<i class="fas fa-check"></i> Copied!';
    copyButton.classList.remove('btn-outline-secondary');
    copyButton.classList.add('btn-success');

    setTimeout(function() {
      copyButton.innerHTML = originalText;
      copyButton.classList.remove('btn-success');
      copyButton.classList.add('btn-outline-secondary');
    }, 2000);
  } catch (err) {
    console.error('Fallback copy failed: ', err);
    alert('Copy to clipboard failed. Please select and copy the text manually.');
  }

  document.body.removeChild(textArea);
}
</script>